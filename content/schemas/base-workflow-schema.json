{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "dassana/base",
  "type": "object",
  "description": "This schema describes the base model of any workflow",
  "default": {},
  "required": ["schema", "id", "filters", "type"],
  "properties": {
    "schema": {
      "$id": "#/properties/schema",
      "type": "integer",
      "description": "Schema version. Currently only version 1 is supported",
      "default": 1,
      "minimum": 1,
      "maximum": 1,
      "examples": [1]
    },
    "id": {
      "$id": "#/properties/id",
      "description": "This id uniquely identifies the workflow. If you want to customize any public (open source) workflows, you can use the same id in your customized workflow and put the workflow in the s3 bucket.",
      "default": "",
      "allOf": [
        {
          "$id": "#/properties/id/allOf/0",
          "type": "string",
          "pattern": "^[a-z0-9-]+$"
        }
      ],
      "examples": ["foo-cloud-normalize"]
    },
    "filters": {
      "$id": "#/properties/filters",
      "type": "array",
      "description": "An array of filters which will be used to figure out if engine should run this workflow or not",
      "default": [],
      "examples": [
        [
          {
            "rules": [
              ".badThingJustHappened and .badThingJustHappened.description",
              ".badThingJustHappened.description | contains (\"fubar\")"
            ],
            "match-type": "all"
          }
        ]
      ],
      "additionalItems": false,
      "items": {
        "$id": "#/properties/filters/items",
        "allOf": [
          {
            "$id": "#/properties/filters/items/allOf/0",
            "type": "object",
            "description": "This object represents the filter which will be evaluated by Dassana Engine",
            "default": {},
            "examples": [
              {
                "rules": [
                  ".badThingJustHappened and .badThingJustHappened.description",
                  ".badThingJustHappened.description | contains (\"fubar\")"
                ],
                "match-type": "all"
              }
            ],
            "required": ["rules", "match-type"],
            "properties": {
              "rules": {
                "$id": "#/properties/filters/items/allOf/0/properties/rules",
                "type": "array",
                "description": "An array of rules",
                "default": [],
                "examples": [
                  [
                    ".badThingJustHappened and .badThingJustHappened.description",
                    ".badThingJustHappened.description | contains (\"fubar\")"
                  ]
                ],
                "additionalItems": false,
                "items": {
                  "$id": "#/properties/filters/items/allOf/0/properties/rules/items",
                  "allOf": [
                    {
                      "$id": "#/properties/filters/items/allOf/0/properties/rules/items/allOf/0",
                      "type": "string",
                      "default": "",
                      "examples": [
                        ".badThingJustHappened and .badThingJustHappened.description",
                        ".badThingJustHappened.description | contains (\"fubar\")"
                      ]
                    }
                  ]
                }
              },
              "match-type": {
                "$id": "#/properties/filters/items/allOf/0/properties/match-type",
                "type": "string",
                "enum": ["any", "all"],
                "description": "any or all",
                "default": "",
                "examples": ["all"]
              }
            },
            "additionalProperties": true
          }
        ]
      }
    },
    "type": {
      "$id": "#/properties/type",
      "type": "string",
      "default": "",
      "enum": [
        "normalize",
        "general-context",
        "policy-context",
        "resource-context"
      ],
      "examples": ["normalize"]
    },
    "steps": {
      "$id": "#/properties/steps",
      "type": "array",
      "description": "These steps are executed by Dassana Engine in the order they are specified",
      "default": [],
      "examples": [
        [
          {
            "uses": "DemoCloudNormalizer",
            "id": "resource-info"
          }
        ]
      ],
      "additionalItems": false,
      "items": {
        "$id": "#/properties/steps/items",
        "allOf": [
          {
            "$id": "#/properties/steps/items/allOf/0",
            "type": "object",
            "description": "An explanation about the purpose of this instance.",
            "default": {},
            "examples": [
              {
                "uses": "DemoCloudNormalizer",
                "id": "resource-info"
              }
            ],
            "required": ["uses", "id"],
            "properties": {
              "uses": {
                "$id": "#/properties/steps/items/allOf/0/properties/uses",
                "type": "string",
                "pattern": "^[a-zA-Z0-9-_]+$",
                "description": "The name of the Dassana Action (aka serverless function) defined in template.yaml which will be invoked by the engine ",
                "default": "",
                "examples": ["DemoCloudNormalizer"]
              },
              "with": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9-_]+$"
                        },
                        "value": {
                          "type": "string"
                        },
                        "value-type": {
                          "type": "string",
                          "enum": ["JQ", "STRING", "INT"]
                        }
                      }
                    }
                  ]
                }
              },
              "id": {
                "$id": "#/properties/steps/items/allOf/0/properties/id",
                "type": "string",
                "pattern": "^[a-zA-Z0-9-_]+$",
                "description": "This id is used to refer to the output of the step",
                "default": "",
                "examples": ["resource-info"]
              }
            },
            "additionalProperties": false
          }
        ]
      }
    },
    "risk-config": {
      "$id": "#/properties/risk-config",
      "type": "object",
      "title": "The risk-config schema",
      "required": ["default-risk"],
      "properties": {
        "default-risk": {
          "$id": "#/properties/risk-config/properties/default-risk",
          "type": "string",
          "enum": [ "", "critical", "high", "medium", "low", "accepted"],
          "title": "The default-risk schema"
        },
        "rules": {
          "$id": "#/properties/risk-config/properties/rules",
          "type": "array",
          "title": "The rules schema",
          "additionalItems": true,
          "items": {
            "$id": "#/properties/risk-config/properties/rules/items/0",
            "type": "object",
            "required": [ "id", "condition", "risk" ],
            "properties": {
              "id": {
                "$id": "#/properties/risk-config/properties/rules/items/0/properties/id",
                "default": "",
                "allOf": [
                  {
                    "type": "string",
                    "pattern": "^[a-z0-9-]+$"
                  }
                ],
                "title": "The id of the rule"
              },
              "condition": {
                "$id": "#/properties/risk-config/properties/rules/items/0/properties/condition",
                "type": "string",
                "title": "The jq condition"
              },
              "risk": {
                "$id": "#/properties/risk-config/properties/rules/items/0/properties/risk",
                "title": "The risk schema",
                "type": "string",
                "enum": [ "", "critical", "high", "medium", "low", "accepted"]
              },
              "subrules": {
                "$id": "#/properties/risk-config/properties/rules/items/subrules",
                "type": "array",
                "title": "The subrules schema",
                "additionalItems": true,
                "items": {
                  "$id": "#/properties/risk-config/properties/rules/items/subrules/items/0",
                  "type": "object",
                  "required": [ "id", "condition", "risk" ],
                  "properties": {
                    "id": {
                      "$id": "#/properties/risk-config/properties/rules/items/subrules/items/0/properties/id",
                      "default": "",
                      "allOf": [
                        {
                          "type": "string",
                          "pattern": "^[a-z0-9-]+$"
                        }
                      ],
                      "title": "The id of the rule"
                    },
                    "condition": {
                      "$id": "#/properties/risk-config/properties/rules/items/subrules/items/0/properties/condition",
                      "type": "string",
                      "title": "The jq condition"
                    },
                    "risk": {
                      "$id": "#/properties/risk-config/properties/rules/items/subrules/items/0/properties/risk",
                      "title": "The risk schema",
                      "type": "string",
                      "enum": [ "", "critical", "high", "medium", "low", "accepted"]
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "output": {
    "$id": "#/properties/output",
    "type": "array",
    "title": "The output schema",
    "additionalItems": false,
    "items": {
      "$id": "#/properties/output/items",
      "allOf": [
        {
          "type": "object",
          "required": ["name", "value"],
          "properties": {
            "name": {
              "id": "alertIdName",
              "type": "string",
              "title": "the name will become the key",
              "enum": [
                "vendorId",
                "alertId",
                "canonicalId",
                "vendorPolicy",
                "csp",
                "resourceContainer",
                "region",
                "service",
                "resourceType",
                "resourceId"
              ]
            },
            "value": {
              "type": "string",
              "title": "The value schema"
            },
            "value-type": {
              "type": "string",
              "enum": ["JQ", "STRING", "INT"]
            }
          },
          "additionalProperties": false
        }
      ]
    }
  },
  "additionalProperties": true
}
